<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <id>zola</id>
    <version>0.16.1</version>
    <title>zola</title>
    <authors>Vincent Prouillet, zola contributors</authors>

    <projectUrl>https://www.getzola.org/</projectUrl>
    <iconUrl>https://avatars3.githubusercontent.com/u/43047029</iconUrl>

    <licenseUrl>https://github.com/getzola/zola/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>

    <projectSourceUrl>https://github.com/getzola/zola</projectSourceUrl>
    <docsUrl>https://www.getzola.org/documentation/</docsUrl>
    <bugTrackerUrl>https://github.com/getzola/zola/issues</bugTrackerUrl>
    <packageSourceUrl>https://github.com/gsomix/ChocolateyPackages</packageSourceUrl>

    <tags>zola static site-generator static-site-generator blog-engine documentation-tool cms markdown markdown-to-html content-management-system</tags>
    <summary>A fast static site generator in a single binary with everything built-in</summary>
    <description>A fast static site generator in a single binary with everything built-in. Documentation is available on [its site](https://www.getzola.org/documentation/getting-started/installation/) or
in the `docs/content` folder of the repository.

### Supported content formats

- Zola: markdown
- Cobalt: markdown
- Hugo: markdown, asciidoc, org-mode
- Pelican: reStructuredText, markdown, asciidoc, org-mode, whatever-you-want

### Template engine explanation

Cobalt gets `~` as, while based on [Liquid](https://shopify.github.io/liquid/), the Rust library doesn't implement all its features but there is no documentation on what is and isn't implemented. The errors are also cryptic. Liquid itself is not powerful enough to do some of things you can do in Jinja2, Go templates or Tera.

Hugo gets `~`. It is probably the most powerful template engine in the list after Jinja2 (hard to beat python code in templates) but personally drives me insane, to the point of writing my own template engine and static site generator. Yes, this is a bit biased.

### Pelican notes
Many features of Pelican are coming from plugins, which might be tricky
to use because of version mismatch or lacking documentation. Netlify supports Python
and Pipenv but you still need to install your dependencies manually.

## Contributing
As the documentation site is automatically built on commits to master, all development
should happen on the `next` branch, unless it is fixing the current documentation.

If you want a feature added or modified, please open an issue to discuss it before doing a PR.

    </description>

    <owners>gsomix</owners>
    <releaseNotes>## 0.16.1 (2022-08-14)

- Fix many Windows bugs
- Fix overriding built-in shortcodes
- Support .yml files with `load_data`

## 0.16.0 (2022-07-16)

### Breaking

- Switch to pulldown-cmark anchor system rather than ours, some (very niche) edge cases are not supported anymore, you can
also specify classes on headers now
- Now outputs empty taxonomies instead of ignoring them
- Unify all pages sorting variable names in templates to `lower`/`higher` in order to make it easy to re-use templates and it
was becoming hard to come up with names to be honest

### Other
- Fix markup for fenced code with linenos
- Make `ignored_content` work with nested paths and directories
- `zola serve/build` can now run from anywhere in a zola directory
- Add XML support to `load_data`
- Add YAML support to `load_data`
- `skip_prefixes` is now checked before parsing external link URLs
- Add `render` attribute to taxonomies configuration in `config.toml`, for when you don't want to render
any pages related to that taxonomy
- Serialize `transparent` field from front-matter of sections
- Use Zola Tera instance for markdown filter: this means you have access to the same Tera functions as in shortcodes
- Ignore sections with `render=false` when looking for path collisions
- Add support for backlinks
- Add a warning mode for internal/external link checking in case you don't want zola to stop the build on invalid links
- Always follow symlinks when loading the site/assets
- Add `rel="alternate"` to Atom post links
- Fix taxonomy `current_path`
- Fix feed location for taxonomies not in the default language
- Add `title_bytes` sorting method
- Add `insert_anchor = "heading"`, which allows users to use the entire heading as a link
- Apply orientation transformation based on EXIF data
- Fix generated homepages not having their `translations` filled properly
    </releaseNotes>
    
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>